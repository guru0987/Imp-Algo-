class sparsetable {
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		int n = sc.nextInt();
		int a[]=  new int[n];
		for(int i=0;i<n;i++)
			a[i] = sc.nextInt();
		int sparse[][] = createSparseTable(a,n);
		int q = sc.nextInt();
	    while(q-->0) {
	        int l = sc.nextInt(), r = sc.nextInt();
			int m = (int) (Math.log(r - l + 1)/Math.log(2));
	        
	        System.out.println(Math.min(sparse[l][m], sparse[r - (1<<m) + 1][m])); 
	    }
	}
	static int[][] createSparseTable(int a[] , int n) {
		int sz = (int) (Math.log(n)/Math.log(2));
	    int sparse[][] = new int[n][sz+1]; 
	    
	    for(int j = 0;j<=sz;j++) {
	        for(int i = 0;i<n;i++) {
	            
	            if(i + (1<<j) > n) break;  
	            if(j==0) sparse[i][j] = a[i]; 
	            else {
	                sparse[i][j] = Math.min(sparse[i][j-1], sparse[i + (1<< (j-1))][j-1]); 
	            }
	        }
	    }
	    return sparse;
	}
}
